volumes:
  n8n_storage:
    name: n8n_storage
  postgres_storage:
    name: postgres_storage
  ollama_storage:
    name: ollama_storage
  qdrant_storage:
    name: qdrant_storage

networks:
  ssa:
    name: n8n_ssa_network  # Adding explicit name to prevent network lookup errors
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

x-n8n: &service-n8n
  image: n8nio/n8n:latest
  networks: [ 'ssa' ]
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_USER=${POSTGRES_USER}
    - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
    - N8N_DIAGNOSTICS_ENABLED=false
    - N8N_PERSONALIZATION_ENABLED=false
    - N8N_ENCRYPTION_KEY
    - N8N_USER_MANAGEMENT_JWT_SECRET
    - OLLAMA_HOST=ollama:11434
    - N8N_PORT=${N8N_PORT}
    - WEBHOOK_URL=${WEBHOOK_URL}
    - N8N_SECURE_COOKIE=false
    - N8N_EDITOR_BASE_URL=${N8N_EDITOR_BASE_URL}
    - N8N_RUNNERS_ENABLED=true
    - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true

x-ollama: &service-ollama
  image: ollama/ollama:0.3.10
  container_name: ollama
  networks: [ 'ssa' ]
  restart: unless-stopped
  ports:
    - 11434:11434
  volumes:
    - ollama_storage:/root/.ollama

x-init-ollama: &init-ollama
  image: ollama/ollama:latest
  networks: [ 'ssa' ]
  container_name: ollama-pull-llama
  volumes:
    - ollama_storage:/root/.ollama
  entrypoint: /bin/sh
  environment:
    - OLLAMA_HOST=ollama:11434
  command:
    - "-c"
    - "sleep 3; ollama pull jeffh/intfloat-multilingual-e5-large-instruct:f16"

services:
  postgres:
    image: groonga/pgroonga:4.0.1-alpine-17
    hostname: postgres
    networks: [ 'ssa' ]
    restart: unless-stopped
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    ports:
      - 5432:5432
    volumes:
      - postgres_storage:/var/lib/postgresql/data
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}' ]
      interval: 5s
      timeout: 5s
      retries: 10

  n8n-import:
    <<: *service-n8n
    hostname: n8n-import
    container_name: n8n-import
    entrypoint: /bin/sh
    command:
      - "-c"
      - "n8n import:credentials --separate --input=/backup/credentials && n8n import:workflow --separate --input=/backup/workflows"
    volumes:
      - ./n8n/backup:/backup
    depends_on:
      postgres:
        condition: service_healthy

  n8n:
    <<: *service-n8n
    hostname: n8n
    container_name: n8n
    restart: unless-stopped
    ports:
      - ${N8N_PORT}:${N8N_PORT}
    volumes:
      - n8n_storage:/home/node/.n8n
      - ./n8n/backup:/backup
      - ./shared:/data/shared
    depends_on:
      postgres:
        condition: service_healthy
      n8n-import:
        condition: service_completed_successfully

  qdrant:
    image: qdrant/qdrant
    hostname: qdrant
    container_name: qdrant
    networks: [ 'ssa' ]
    restart: unless-stopped
    ports:
      - 6333:6333
      - 6334:6334
    volumes:
      - qdrant_storage:/qdrant/storage

  ollama-cpu:
    <<: *service-ollama

  ollama-pull-llama-cpu:
    <<: *init-ollama
    depends_on:
      - ollama-cpu
